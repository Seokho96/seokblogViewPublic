{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kangsh\\\\Desktop\\\\react_pjt\\\\my-app\\\\src\\\\App.js\";\nimport { useState, useEffect } from 'react';\nimport customAxios from './customAxios';\n/*\nfunction App() {\n  const [id, setPassword] = useState(\"\") \n  const [password, setPassword] = useState(\"\")\n  const [disabled, setDisabled] = useState(false)\n\n  const handleChange = ({ target: { value } }) => setPassword(value)\n\n  const handleSubmit = async (event) => {\n    setDisabled(true)\n    event.preventDefault()\n    await new Promise((r) => setTimeout(r, 1000))\n    alert(`변경된 패스워드: ${id}`)\n \n    setDisabled(false)\n  }\n*/\n//서버로 가입 양식 제출\n\nhandleSubmit = e => {\n  e.preventDefault();\n  const {\n    email,\n    emailCheck,\n    nickname,\n    nicknameCheck,\n    pwCheck,\n    pw,\n    re_pw\n  } = this.state;\n  const signupInfo = {\n    email: this.state.emailCheck,\n    pw: this.state.pwCheck,\n    nickname: this.state.nicknameCheck\n  };\n  const signup_info = {\n    method: \"POST\",\n    body: JSON.stringify(signupInfo),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  if (email && nickname && pw && re_pw && email === emailCheck && nickname === nicknameCheck && pw === re_pw && re_pw === pwCheck) {\n    fetch(\"http://localhost:8888/member\", signup_info).then(alert(\"가입이 완료되었습니다.\")).then(this.props.history.push(\"/login\"));\n  } else {\n    alert(\"입력값을 확인해주세요\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"html\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Email, {\n        handleEmail: this.handleEmail,\n        checkEmail: this.checkEmail,\n        value: this.state.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Nickname, {\n        handleNickname: this.handleNickname,\n        checkNickname: this.checkNickname,\n        value: this.state.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Password, {\n        handlePW: this.handlePW,\n        handleRE_PW: this.handleRE_PW,\n        checkPW: this.checkPW,\n        value1: this.state.pw,\n        value2: this.state.re_pw\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleSubmit,\n          children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/kangsh/Desktop/react_pjt/my-app/src/App.js"],"names":["useState","useEffect","customAxios","handleSubmit","e","preventDefault","email","emailCheck","nickname","nicknameCheck","pwCheck","pw","re_pw","state","signupInfo","signup_info","method","body","JSON","stringify","headers","fetch","then","alert","props","history","push","handleEmail","checkEmail","handleNickname","checkNickname","handlePW","handleRE_PW","checkPW","App"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,YAAY,GAAGC,CAAC,IAAI;AAClBA,EAAAA,CAAC,CAACC,cAAF;AACA,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,EANI;AAOJC,IAAAA;AAPI,MAQF,KAAKC,KART;AAUA,QAAMC,UAAU,GAAG;AACjBR,IAAAA,KAAK,EAAE,KAAKO,KAAL,CAAWN,UADD;AAEjBI,IAAAA,EAAE,EAAE,KAAKE,KAAL,CAAWH,OAFE;AAGjBF,IAAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWJ;AAHJ,GAAnB;AAMA,QAAMM,WAAW,GAAG;AAClBC,IAAAA,MAAM,EAAE,MADU;AAElBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAFY;AAGlBM,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHS,GAApB;;AAQA,MACEd,KAAK,IACLE,QADA,IAEAG,EAFA,IAGAC,KAHA,IAIAN,KAAK,KAAKC,UAJV,IAKAC,QAAQ,KAAKC,aALb,IAMAE,EAAE,KAAKC,KANP,IAOAA,KAAK,KAAKF,OARZ,EASE;AACAW,IAAAA,KAAK,CAAC,8BAAD,EAAiCN,WAAjC,CAAL,CACGO,IADH,CACQC,KAAK,CAAC,cAAD,CADb,EAEGD,IAFH,CAEQ,KAAKE,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CAFR;AAGD,GAbD,MAaO;AACLH,IAAAA,KAAK,CAAC,aAAD,CAAL;AACD;;AAKD,sBACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA,4BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,WAAW,EAAE,KAAKI,WADpB;AAEE,QAAA,UAAU,EAAE,KAAKC,UAFnB;AAGE,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWP;AAHpB;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,QAAD;AACE,QAAA,cAAc,EAAE,KAAKuB,cADvB;AAEE,QAAA,aAAa,EAAE,KAAKC,aAFtB;AAGE,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWL;AAHpB;AAAA;AAAA;AAAA;AAAA,cANF,eAWE,QAAC,QAAD;AACE,QAAA,QAAQ,EAAE,KAAKuB,QADjB;AAEE,QAAA,WAAW,EAAE,KAAKC,WAFpB;AAGE,QAAA,OAAO,EAAE,KAAKC,OAHhB;AAIE,QAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWF,EAJrB;AAKE,QAAA,MAAM,EAAE,KAAKE,KAAL,CAAWD;AALrB;AAAA;AAAA;AAAA;AAAA,cAXF,eAkBE;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAE,KAAKT,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA7ED;;AA8EA,eAAe+B,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport customAxios from './customAxios';\n\n\n/*\nfunction App() {\n  const [id, setPassword] = useState(\"\") \n  const [password, setPassword] = useState(\"\")\n  const [disabled, setDisabled] = useState(false)\n\n  const handleChange = ({ target: { value } }) => setPassword(value)\n\n  const handleSubmit = async (event) => {\n    setDisabled(true)\n    event.preventDefault()\n    await new Promise((r) => setTimeout(r, 1000))\n    alert(`변경된 패스워드: ${id}`)\n \n    setDisabled(false)\n  }\n*/\n//서버로 가입 양식 제출\nhandleSubmit = e => {\n  e.preventDefault();\n  const {\n    email,\n    emailCheck,\n    nickname,\n    nicknameCheck,\n    pwCheck,\n    pw,\n    re_pw\n  } = this.state;\n\n  const signupInfo = {\n    email: this.state.emailCheck,\n    pw: this.state.pwCheck,\n    nickname: this.state.nicknameCheck\n  };\n\n  const signup_info = {\n    method: \"POST\",\n    body: JSON.stringify(signupInfo),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  if (\n    email &&\n    nickname &&\n    pw &&\n    re_pw &&\n    email === emailCheck &&\n    nickname === nicknameCheck &&\n    pw === re_pw &&\n    re_pw === pwCheck\n  ) {\n    fetch(\"http://localhost:8888/member\", signup_info)\n      .then(alert(\"가입이 완료되었습니다.\"))\n      .then(this.props.history.push(\"/login\"));\n  } else {\n    alert(\"입력값을 확인해주세요\");\n  }\n\n\n\n\n  return (\n    <html className=\"App\">\n       <h1>Signup</h1>\n        <br />\n        <div>\n          <Email\n            handleEmail={this.handleEmail}\n            checkEmail={this.checkEmail}\n            value={this.state.email}\n          />\n          <Nickname\n            handleNickname={this.handleNickname}\n            checkNickname={this.checkNickname}\n            value={this.state.nickname}\n          />\n          <Password\n            handlePW={this.handlePW}\n            handleRE_PW={this.handleRE_PW}\n            checkPW={this.checkPW}\n            value1={this.state.pw}\n            value2={this.state.re_pw}\n          />\n          <div>\n            <button onClick={this.handleSubmit}>가입하기</button>\n          </div>\n        </div>\n    </html>\n    \n    \n  );\n \n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}